{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\forka\\\\Desktop\\\\pj\\\\e-commerce-app\\\\client\\\\e-commerce\\\\pages\\\\users\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Layout from '../../components/Layout';\nimport ListDetail from '../../components/ListDetail';\nimport { sampleFetchWrapper } from '../../utils/sample-api';\n\nvar InitialPropsDetail = /*#__PURE__*/function (_React$Component) {\n  _inherits(InitialPropsDetail, _React$Component);\n\n  function InitialPropsDetail() {\n    _classCallCheck(this, InitialPropsDetail);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InitialPropsDetail).apply(this, arguments));\n  }\n\n  _createClass(InitialPropsDetail, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          item = _this$props.item,\n          errors = _this$props.errors;\n\n      if (errors) {\n        return __jsx(Layout, {\n          title: \"Error | Next.js + TypeScript Example\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Error:\"), \" \", errors));\n      }\n\n      return __jsx(Layout, {\n        title: \"\".concat(item ? item.name : 'User Detail', \" | Next.js + TypeScript Example\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, item && __jsx(ListDetail, {\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return InitialPropsDetail;\n}(React.Component);\n\n_defineProperty(InitialPropsDetail, \"getInitialProps\", function _callee(_ref) {\n  var query, id, item;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query;\n          _context.prev = 1;\n          id = query.id;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(sampleFetchWrapper(\"http://localhost:3000/api/users/\".concat(_Array$isArray(id) ? id[0] : id)));\n\n        case 5:\n          item = _context.sent;\n          return _context.abrupt(\"return\", {\n            item: item\n          });\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          return _context.abrupt(\"return\", {\n            errors: _context.t0.message\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 9]], _Promise);\n});\n\nexport default InitialPropsDetail;","map":{"version":3,"sources":["C:/Users/forka/Desktop/pj/e-commerce-app/client/e-commerce/pages/users/[id].tsx"],"names":["React","Layout","ListDetail","sampleFetchWrapper","InitialPropsDetail","props","item","errors","color","name","Component","query","id","message"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;;IAOMC,kB;;;;;;;;;;;6BAaK;AAAA,wBACkB,KAAKC,KADvB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,MADP,eACOA,MADP;;AAGP,UAAIA,MAAJ,EAAY;AACV,eACE,MAAC,MAAD;AAAQ,UAAA,KAAK,wCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,OACgDD,MADhD,CADF,CADF;AAOD;;AAED,aACE,MAAC,MAAD;AACE,QAAA,KAAK,YACHD,IAAI,GAAGA,IAAI,CAACG,IAAR,GAAe,aADhB,oCADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGH,IAAI,IAAI,MAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALX,CADF;AASD;;;;EAnC8BN,KAAK,CAACU,S;;gBAAjCN,kB,qBACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASO,UAAAA,KAAT,QAASA,KAAT;AAAA;AAEbC,UAAAA,EAFa,GAEND,KAFM,CAEbC,EAFa;AAAA;AAAA,2CAGFT,kBAAkB,2CACA,eAAcS,EAAd,IAAoBA,EAAE,CAAC,CAAD,CAAtB,GAA4BA,EAD5B,EAHhB;;AAAA;AAGfN,UAAAA,IAHe;AAAA,2CAMd;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WANc;;AAAA;AAAA;AAAA;AAAA,2CAQd;AAAEC,YAAAA,MAAM,EAAE,YAAIM;AAAd,WARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C;;AAqC3B,eAAeT,kBAAf","sourcesContent":["import * as React from 'react'\nimport { NextPageContext } from 'next'\n\nimport { User } from '../../interfaces'\nimport Layout from '../../components/Layout'\nimport ListDetail from '../../components/ListDetail'\nimport { sampleFetchWrapper } from '../../utils/sample-api'\n\ntype Props = {\n  item?: User\n  errors?: string\n}\n\nclass InitialPropsDetail extends React.Component<Props> {\n  static getInitialProps = async ({ query }: NextPageContext) => {\n    try {\n      const { id } = query\n      const item = await sampleFetchWrapper(\n        `http://localhost:3000/api/users/${Array.isArray(id) ? id[0] : id}`\n      )\n      return { item }\n    } catch (err) {\n      return { errors: err.message }\n    }\n  }\n\n  render() {\n    const { item, errors } = this.props\n\n    if (errors) {\n      return (\n        <Layout title={`Error | Next.js + TypeScript Example`}>\n          <p>\n            <span style={{ color: 'red' }}>Error:</span> {errors}\n          </p>\n        </Layout>\n      )\n    }\n\n    return (\n      <Layout\n        title={`${\n          item ? item.name : 'User Detail'\n        } | Next.js + TypeScript Example`}\n      >\n        {item && <ListDetail item={item} />}\n      </Layout>\n    )\n  }\n}\n\nexport default InitialPropsDetail\n"]},"metadata":{},"sourceType":"module"}