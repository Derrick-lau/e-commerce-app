{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\forka\\\\Desktop\\\\pj\\\\e-commerce-app\\\\client\\\\e-commerce\\\\pages\\\\users\\\\[id].tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport Layout from '../../components/Layout';\nimport ListDetail from '../../components/ListDetail';\nimport { sampleFetchWrapper } from '../../utils/sample-api';\n\nclass InitialPropsDetail extends React.Component {\n  render() {\n    const {\n      item,\n      errors\n    } = this.props;\n\n    if (errors) {\n      return __jsx(Layout, {\n        title: `Error | Next.js + TypeScript Example`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Error:\"), \" \", errors));\n    }\n\n    return __jsx(Layout, {\n      title: `${item ? item.name : 'User Detail'} | Next.js + TypeScript Example`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, item && __jsx(ListDetail, {\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\n_defineProperty(InitialPropsDetail, \"getInitialProps\", async ({\n  query\n}) => {\n  try {\n    const {\n      id\n    } = query;\n    const item = await sampleFetchWrapper(`http://localhost:3000/api/users/${Array.isArray(id) ? id[0] : id}`);\n    return {\n      item\n    };\n  } catch (err) {\n    return {\n      errors: err.message\n    };\n  }\n});\n\nexport default InitialPropsDetail;","map":{"version":3,"sources":["C:/Users/forka/Desktop/pj/e-commerce-app/client/e-commerce/pages/users/[id].tsx"],"names":["React","Layout","ListDetail","sampleFetchWrapper","InitialPropsDetail","Component","render","item","errors","props","color","name","query","id","Array","isArray","err","message"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;;AAOA,MAAMC,kBAAN,SAAiCJ,KAAK,CAACK,SAAvC,CAAwD;AAatDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKC,KAA9B;;AAEA,QAAID,MAAJ,EAAY;AACV,aACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAG,sCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OACgDF,MADhD,CADF,CADF;AAOD;;AAED,WACE,MAAC,MAAD;AACE,MAAA,KAAK,EAAG,GACND,IAAI,GAAGA,IAAI,CAACI,IAAR,GAAe,aACpB,iCAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGJ,IAAI,IAAI,MAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALX,CADF;AASD;;AAnCqD;;gBAAlDH,kB,qBACqB,OAAO;AAAEQ,EAAAA;AAAF,CAAP,KAAsC;AAC7D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAASD,KAAf;AACA,UAAML,IAAI,GAAG,MAAMJ,kBAAkB,CAClC,mCAAkCW,KAAK,CAACC,OAAN,CAAcF,EAAd,IAAoBA,EAAE,CAAC,CAAD,CAAtB,GAA4BA,EAAG,EAD/B,CAArC;AAGA,WAAO;AAAEN,MAAAA;AAAF,KAAP;AACD,GAND,CAME,OAAOS,GAAP,EAAY;AACZ,WAAO;AAAER,MAAAA,MAAM,EAAEQ,GAAG,CAACC;AAAd,KAAP;AACD;AACF,C;;AA2BH,eAAeb,kBAAf","sourcesContent":["import * as React from 'react'\nimport { NextPageContext } from 'next'\n\nimport { User } from '../../interfaces'\nimport Layout from '../../components/Layout'\nimport ListDetail from '../../components/ListDetail'\nimport { sampleFetchWrapper } from '../../utils/sample-api'\n\ntype Props = {\n  item?: User\n  errors?: string\n}\n\nclass InitialPropsDetail extends React.Component<Props> {\n  static getInitialProps = async ({ query }: NextPageContext) => {\n    try {\n      const { id } = query\n      const item = await sampleFetchWrapper(\n        `http://localhost:3000/api/users/${Array.isArray(id) ? id[0] : id}`\n      )\n      return { item }\n    } catch (err) {\n      return { errors: err.message }\n    }\n  }\n\n  render() {\n    const { item, errors } = this.props\n\n    if (errors) {\n      return (\n        <Layout title={`Error | Next.js + TypeScript Example`}>\n          <p>\n            <span style={{ color: 'red' }}>Error:</span> {errors}\n          </p>\n        </Layout>\n      )\n    }\n\n    return (\n      <Layout\n        title={`${\n          item ? item.name : 'User Detail'\n        } | Next.js + TypeScript Example`}\n      >\n        {item && <ListDetail item={item} />}\n      </Layout>\n    )\n  }\n}\n\nexport default InitialPropsDetail\n"]},"metadata":{},"sourceType":"module"}